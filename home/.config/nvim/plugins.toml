[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['Shougo/context_filetype.vim']

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-d> [denite]

  nnoremap <silent> [denite] :<C-u>Denite buffer -split=floating file:new<CR>

  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep', '--no-heading'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', '--regexp')
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])

  nnoremap <silent> [denite]<C-g> :<C-u>Denite grep -mode=normal<CR>
  nnoremap <silent> [denite]<C-r> :<C-u>Denite -resume<CR>
  nnoremap <silent> [denite]<C-n> :<C-u>Denite -resume -cursor-pos=+1 -immediately<CR>
  nnoremap <silent> [denite]<C-p> :<C-u>Denite -resume -cursor-pos=-1 -immediately<CR>

  call denite#custom#option('default', {'mode': 'normal'})
  call denite#custom#map('insert', 'jj', '<denite:enter_mode:normal>')

  noremap [denite]<C-f> :<C-u>Denite file_rec -mode=insert<CR>
  call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])

  noremap [denite]<C-d> :<C-u>Denite directory_rec<CR>
  noremap [denite]<C-c> :<C-u>Denite directory_rec --default-action=cd<CR>

  call denite#custom#map('normal', 'j', '<denite:nop>', 'noremap')
  call denite#custom#map('normal', 'k', '<denite:nop>', 'noremap')
  call denite#custom#map('normal', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('normal', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('normal', '<C-u>', '<denite:move_up_path>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<C-u>', '<denite:move_up_path>', 'noremap')

  call denite#custom#map('normal', '<C-j>', '<denite:do_action:split>', 'noremap')
  call denite#custom#map('normal', '<C-l>', '<denite:do_action:vsplit>', 'noremap')
  call denite#custom#map('insert', '<C-j>', '<denite:do_action:split>', 'noremap')
  call denite#custom#map('insert', '<C-l>', '<denite:do_action:vsplit>', 'noremap')
'''

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_source = ['unite.vim']

[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
  let g:NERDTreeWinSize = 50
  let g:NERDTreeShowBookMarks = 1
  let g:NERDTreeMapUpdir = ''
  let g:NERDTreeMapOpenSplit = '<C-j>'
  let g:NERDTreeMapOpenVSplit = '<C-l>'
  let g:NERDTreeQuitOnOpen = 1
  let g:NERDTreeShowHidden = 1
  let g:NERDTreeIgnore = ['\.git$']
  autocmd bufenter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q | endif
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  set updatetime=1000

  nmap ]h <Plug>GitGutterNextHunk
  nmap [h <Plug>GitGutterPrevHunk
  nmap <Leader>ha <Plug>GitGutterStageHunk
  nmap <Leader>hu <Plug>GitGutterUndoHunk
  nmap <Leader>hp <Plug>GitGutterPreviewHunk
'''

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  nmap ww gcc
  vmap ww gcc
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_auto_colors = 0
  let g:indent_guides_exlude_filetypes = ['help', 'vimfiler']
'''

[[plugins]]
repo = 'bfredl/nvim-miniyank'
hook_add = '''
  map p <Plug>(miniyank-autoput)
  map P <Plug>(miniyank-autoPut)
'''

